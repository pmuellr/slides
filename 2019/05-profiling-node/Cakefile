# Licensed under the Apache License. See footer for details.

require "cakex"

pkg = require "./package.json"

path = require "path"

#-------------------------------------------------------------------------------
task "watch", "watch for source file changes, build", -> taskWatch()
task "build", "run a build",                          -> taskBuild()

WatchSpec = "*.md snippets/*.js demos/express-demo/*.js"

#-------------------------------------------------------------------------------
mkdir "-p", "tmp"

#-------------------------------------------------------------------------------
taskBuild = ->
  buildIndex()

#-------------------------------------------------------------------------------
taskWatch = ->
  watchIter()

  watch
    files: WatchSpec.split " "
    run:   watchIter

  # watch
  #   files: "doc/**/*"
  #   run:   watchIterDoc

  watch
    files: "Cakefile"
    run: (file) ->
      return unless file == "Cakefile"
      log "Cakefile changed, exiting"
      exit 0

#-------------------------------------------------------------------------------
watchIter = ->
  log "in #{path.relative "../..", __dirname}"

  taskBuild()

#-------------------------------------------------------------------------------
buildIndex = ->
  log "building index.html from shell.html and slides.md"

  slides = cat "slides.md"
  slides = processEmbeds slides
  slides = normalizeSlides slides

  shell = cat "shell.html"
  index = shell.replace "%slides.md%", slides

  chmod "+w", "index.html" if test "-f", "index.html"
  index.to "index.html"
  chmod "-w", "index.html"

  exec "demos/run-highight.sh"

#-------------------------------------------------------------------------------
processEmbeds = (slides) ->
  pattern = /^\/\/!embed:\s+(.*?)(\s+(.*))?$/

  lines = slides.split /\n/

  lines = lines.map (line) ->
    return line unless match = line.match pattern

    file = match[1]
    arg  = match[3] || ""

    content = cat file
    content = content.replace /%arg%/g, arg

  return lines.join "\n"

#-------------------------------------------------------------------------------
normalizeSlides = (slides) ->
  lines = slides.split /\n/

  lines = lines.map (line) ->
    return line if line.length < 4
    return line unless line.match /(----*)|(====*)/
    return "---"

  return lines.join "\n"

#-------------------------------------------------------------------------------
cleanDir = (dir) ->
  mkdir "-p", dir
  rm "-rf", "#{dir}/*"

#-------------------------------------------------------------------------------
# Copyright Patrick Mueller 2015
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#-------------------------------------------------------------------------------
